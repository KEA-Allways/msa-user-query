plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.sonarqube' version '3.0'
}

sonarqube {
	properties {
		property "sonar.host.url", "http://18.204.16.65:9000/"
		property "sonar.login", "sqp_5b252129b3c05271feefb1b99498be7009f27130"
		property "sonar.projectKey", "msa-user-query"
		property "sonar.projectName" , "msa-user-query"
		property "sonar.sources", "src"
		property "sonar.language", "java"
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.java.binaries", "${buildDir}/classes"
		property "sonar.test.inclusions", "**/*Test.java"
		property "sonar.exclusions", "**/resources/static/**, **/Q*.class, **/test/**"
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
	}
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.8")
}



dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.6'




	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mariadb.jdbc:mariadb-java-client'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar{
	archivesBaseName = 'allways'
	archiveFileName = 'msa-user-query.jar'
}